; var declaration
; expr
push 12
; var declaration
; expr
push 0
; if statement
; expr
indup 0
push 1
cmpe
; then
zjmp label0
; write
push_str "x is 1\n"
push 1
native 1
; else statement
jmp label1
label0:
; write
push_str "x is not 1\n"
push 1
native 1
; end
label1:
; while loop
; expr
while0:
indup 0
push 10
cmpl
; then
zjmp label2
; write
push_str "iteration...\n"
push 1
native 1
; var reassign
; expr
indup 0
push 1
add
inswap 1
pop
; end
; end while
jmp while0
label2:
; while loop
; expr
while1:
indup 0
push 0
cmpge
; then
zjmp label3
; if statement
; expr
indup 0
push 5
cmpe
; then
zjmp label4
; write
push_str "x is 5\n"
push 1
native 1
; else statement
jmp label5
label4:
; write
push_str "x is not 5\n"
push 1
native 1
; end
label5:
; var reassign
; expr
indup 0
push 1
sub
inswap 1
pop
; end
; end while
jmp while1
label3:
; exit
; expr
indup 0
native 60
; exit
push 0
native 60
