print_newline:
    push '\n'
    ref
    push 1
    native 1
    pop
    ret

power:
    push r0
    _power_loop:
    push r1
    push 1
    cmpge
    swap
    pop
    swap
    pop
    nzjmp _power_end
    push r0
    mul
    push r1
    push 1
    sub
    mov r1 top
    pop
    jmp _power_loop
    _power_end:
    ret

convert:
    push 0
    cmpg
    zjmp _not_neg
    push '-'
    ref
    push 1 
    native 1
    pop
    swap
    push 0
    swap
    sub 
    swap
    _not_neg:
    pop
    push 9
    cmpl
    zjmp _lessthannine
    pop
    dup
    push 10
    div
    call convert 
    _lessthannine:
    pop
    push 10
    mod
    push 48
    add
    ref
    push 1 
    native 1
    ret

printint:
    call convert
    pop
    ret

printfloat:
    dup
    ftoi 
    dup
    inswap 0
    swap
    itof
    sub_f
    mov r0 top
    pop
    call printint
    push '.'
    ref
    push 1
    native 1
    push r0
    mov r0 10
    mov r1 8
    call power
    itof
    mul_f
    ftoi
    push 0
    cmpg
    zjmp _notneg
    pop
    dup
    push 2
    mul
    sub 
    jmp _endneg
    _notneg:
    pop
    _endneg:

    call printint
    pop
    ret

_strcmp_not_equal:
    push 1
    sub
    jmp _strcmp_end

stringcmp:
    push 1
    _strcmp_loop:
        push r0
        deref
        swap
        push 1
        add
        mov r0 top
        pop
        push r1
        deref
        swap
        push 1
        add
        mov r1 top
        pop
        cmpe
        swap
        pop
        swap
        pop
    zjmp _strcmp_not_equal
    push '\0'
    push r0
    deref
    swap
    pop
    cmpe
    swap
    pop
    swap
    pop
    zjmp _strcmp_loop
    _strcmp_end:
    ret

stringlen:
    push '\0'
    mov r0 top
    pop
    push 0
    swap
    _strlen_loop:
        deref
        push r0
        cmpe
        swap
        pop
        swap
        pop
        ;native 90 ;strcmp
        nzjmp _strlen_end
        push 1
        add
        swap
        push 1
        add
        swap
        jmp _strlen_loop
    _strlen_end:
        pop
        ret

